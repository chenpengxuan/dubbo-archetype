<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ /*
  ~  (C) Copyright 2016 Ymatou (http://www.ymatou.com/).
  ~  All rights reserved.
  ~  */
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://code.alibabatech.com/schema/dubbo        
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<context:annotation-config />

	<aop:aspectj-autoproxy />

	<context:component-scan base-package="${package}" />

	<!-- 使用disconf必须添加以下配置 -->
	<bean id="disconfMgrBean" class="com.baidu.disconf.client.DisconfMgrBean"
		destroy-method="destroy">
		<property name="scanPackage" value="${package}" />
	</bean>
	<bean id="disconfMgrBean2" class="com.baidu.disconf.client.DisconfMgrBeanSecond"
		init-method="init" destroy-method="destroy">
	</bean>

	<bean id="propertiesDisconf"
		class="com.baidu.disconf.client.addons.properties.ReloadablePropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>dubbo.properties</value>
				<value>bus.properties</value>
			</list>
		</property>
	</bean>

	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="propertiesArray">
			<list>
				<ref bean="propertiesDisconf" />
			</list>
		</property>
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
			</list>
		</property>
	</bean>

	<import resource="classpath:spring/persistence.xml" />

	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数，默认为1 -->
		<property name="corePoolSize" value="10" />
		<!-- 最大线程数，默认为Integer.MAX_VALUE -->
		<property name="maxPoolSize" value="50" />
		<!-- 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE -->
		<property name="queueCapacity" value="1000" />
		<!-- 线程池维护线程所允许的空闲时间，默认为60s -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
		<property name="rejectedExecutionHandler">
			<!-- AbortPolicy:直接抛出java.client.concurrent.RejectedExecutionException异常 -->
			<!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
			<!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>

	<!-- 提供方应用信息，用于计算依赖关系 -->
	<dubbo:application name="${artifactId}" />

	<dubbo:registry address="zookeeper://${dubbo.zoo}" />

	<!-- 用dubbo协议在20880端口暴露服务 -->
	<dubbo:protocol name="dubbo" port="20880" serialization="kryo" />

	<dubbo:protocol name="rest" server="tomcat" port="8080"
		extension="${package}.infrastructure.serialize.JacksonConfig" />

	<!-- 声明需要暴露的服务接口 -->


	<!-- 性能监控 -->
	<bean id="performanceMonitorAdvice"
		class="com.ymatou.performancemonitorclient.PerformanceMonitorAdvice">
		<!--Please replace it with your appId -->
		<property name="appId" value="tradeservice" />

		<!--Please replace ip:port with the .NET Performance Monitor Server ip:port -->
		<property name="serverUrl" value="http://172.16.100.13:8089/api/perfmon" />
	</bean>

	<dubbo:service interface="${package}.facade.DemoFacade"
		ref="demoFacade" protocol="dubbo" />


	<bean id="busCfg" class="com.ymatou.config.BusCfg">
		<property name="primaryBusHost" value="${primaryBusHost}" ></property>
		<property name="secondaryHost" value="${secondaryHost}" ></property>
		<property name="journalSize" value="${journalSize}" ></property>
		<property name="journalPath" value="${journalPath}" ></property>
		<property name="socketTimeout" value="${socketTimeout}" ></property>
		<property name="connectTimeout" value="${connectTimeout}" ></property>
		<property name="defaultMaxPerRoute" value="${defaultMaxPerRoute}" ></property>
		<property name="maxConnectPoolSize" value="${maxConnectPoolSize}" ></property>
	</bean>
	<bean id="busAgent" class="com.ymatou.client.DefaultBusAgent" init-method="init">
		<property name="busCfg" ref="busCfg"></property>
	</bean>


	<aop:config>
		<!-- 添加任何你想监控性能的public方法 -->
		<aop:advisor advice-ref="performanceMonitorAdvice"
					 pointcut="execution(* ${package}.facade.*Facade.*(..))
						|| execution(* ${package}.facade.rest.*Resource.*(..))
						|| execution(* ${package}.infrastructure.db.mapper.*Mapper.*(..))
						|| execution(* ${package}.infrastructure.db.query.*Query.*(..))
						|| execution(* ${package}..*Repository.*(..))
						|| execution(* ${package}.integration.client.*.*(..))
						" />
	</aop:config>

</beans>